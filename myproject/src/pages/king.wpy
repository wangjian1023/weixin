<style>
.section {
  display: flex;
  width: 90%;
  justify-content: center;
  align-items: center;
  border: 1px solid gray;
  background-color: white;
  height: 30px;
  font-size: 15px;
  justify-content: space-between;
}

.photo {
  display: flex;
  height: 30px;
  width: 30px;
  align-content: center;
  justify-content: center;
  /* padding: 5px; */
}
.background {
  display: flex;
  width: 100%;
  height: 50px;
  align-items: center;
  justify-content: center;
}

.picture {
  height: 230px;
  width: 95%;
  margin: 10px;
}
.text {
  display: flex;
  border-bottom: 1px solid gray;
  height: 40px;
  flex-direction: column;
  font-size: 15px;
  justify-content: center;
  align-items: center;
}

.sweetheart {
  display: flex;
  justify-content: center;
  align-items: center;
  font-size:20px;
  margin-top:15px;
}
.between {
  display: flex;
  width: 100%;
  justify-content: space-around;
}
.atlas {
  display: flex;
  margin: 20px 10px 10px 10px;
  height: 200px;
  width: 90%;
  justify-content: center;
  align-items: center;
}

.essay {
  display: flex;
  font-size: 15px;
  width: 100%;
  height: 60px;
  
}

.column {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.pattern {
  display: flex;
  background-color: #FFFF99;
  height: 50px;
  width: 100%;
  margin-top: 10px;
  font-size: 15px;
  justify-content: center;
  align-items: center;

}
::-webkit-scrollbar {
  width: 0;
  height: 0;
  color: transparent
}
</style>
<template>
<view>
  <view bindtap="son" class="background">
    <view   bindtap="son" class="section">
      <input  style="align-items: center; justify-content: flex-start;" placeholder="搜索菜谱、食材" focus="{{focus}}" config-type="search" class="input" />
      <image class="photo" src="{{search}}"></image>
    </view>
  </view>
  <image class="picture" src="{{recPhoto}}"></image>

  <view class="text">
    <text>{{recName}}</text>
    <text style="font-size: 14px">{{recView}}</text>
  </view>

  <view class="text" style="height: 60px; flex-direction: row;">
    <text >{{recDescribe}}</text>
  </view>

  <view class="text" style="height: 20px; flex-direction: row; color:#E0E0E0">
    <text >难度:({{rechierarchy}})</text>
    <text >时间： {{time}} 分钟</text>
  </view>

  <text class="sweetheart">_食材用料明细_</text>

  <view class="text" style="height: 20px;"  wx:for="{{food}}" wx:key="index" data-index="{{index}}">
    <view class="between">
      <text >{{item.materials}}</text>
      <text >{{item.conversion}}</text>
    </view>
  </view>

  <text class="sweetheart">·制作步骤·</text>

  <view class="column" wx:for="{{summary}}" wx:key="index" data-index="{{index}}">
    <image class="atlas" src="{{item.artist}}"></image>
    <text class="essay">{{item.reccharacter}}</text>
  </view>

  <text class="sweetheart">/温馨小贴士/</text>

  <text class="essay">{{reminder}}</text>

  <view class="pattern">
    <view style=" display:flex;justify-content: row;">
      <image class="photo" src="{{meng}}"></image>
      <text style=" display:flex; justify-content:center; align-items: center;">收藏菜谱</text>
    </view>  
  </view>

  <text class="sweetheart">·菜谱推荐·</text>



</view>  
</template>

<script>
import wepy from 'wepy'
export default class Show extends wepy.page {
  config = {
    navigationBarTitleText: '菜谱详情'
  }
  data = {
    src: '',
    content: '',
    item: '',
    recPhoto: '',
    recName: '',
    recView: '',
    recDescribe: '',
    hierarchy: '',
    time: '',
    materials: '',
    conversion: '',
    search: '../image/check.png',
    meng: '../image/meng1.png',
    meng1: '../image/memg.png',
    food: [],
    summary: [],
    reminder: '',
    character: '',
    artist: ''
  }
  methods = {
    son() {
      wepy.navigateTo({
        url: '../pages/search'
      })
    }
  }
  onLoad(data) {
    let self = this
    self.recName = data.recName
    self.recPhoto = data.recPhoto
    self.recView = data.recView
    self.recDescribe = data.recDescribe
    self.time = data.time
    self.hierarchy = data.hierarchy
    // self.materials = data.materials
    // self.conversion = data.conversion
    // self.artist = data.artist
    // self.character = data.character
    self.reminder = data.reminder
    self.food = data.food      // split(,)作用是把逗号隔开的字符串转换为数组
    console.log(data, 'bbbbbb')
    // console.log(data.food[], 'ddddddddd')
    self.summary = data.summary
    // console.log(data, '12')
    // console.log(self.recDescribe)
    // console.log(self.food)
    // console.log(self.hierarchy)
    // console.log(self.food[0].materials)
  }
}
</script>
